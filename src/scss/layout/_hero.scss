$hero-colors: (
  white: var(--white),
  black: var(--black),
  blue: var(--blue-500),
  indigo: var(--indigo-500),
  purple: var(--purple-500),
  pink: var(--pink-500),
  red: var(--red-500),
  orange: var(--orange-500),
  yellow: var(--yellow-500),
  green: var(--green-500),
);

/* Default values */

.simple-hero {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: url('your-image-url.jpg');
  background-position: center;
  background-size: cover;
  text-align: center;
  color: #fff;
}

.simple-hero__content {
  max-width: 800px;
  margin: 0 auto;
}

.simple-hero__title {
  font-size: 4rem;
  font-weight: bold;
  margin-bottom: 1rem;
}

.simple-hero__subtitle {
  font-size: 2rem;
  margin-bottom: 2rem;
}

.simple-hero__cta {
  display: inline-block;
  background-color: #fff;
  color: #333;
  font-size: 1.2rem;
  padding: 1rem 2rem;
  border-radius: 30px;
  text-decoration: none;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: #333;
    color: #fff;
  }
}

.hero {
  background-color: var(--white);
  color: var(--black);
  align-items: stretch;
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  &.white {
    background-color: map-get($hero-colors, white);
    color: map-get($hero-colors, black);
  }

  &.black {
    background-color: map-get($hero-colors, black);
    color: map-get($hero-colors, white);
  }

  &.blue {
    background-color: map-get($hero-colors, blue);
    color: map-get($hero-colors, white);
  }

  &.indigo {
    background-color: map-get($hero-colors, indigo);
    color: map-get($hero-colors, white);
  }

  &.purple {
    background-color: map-get($hero-colors, purple);
    color: map-get($hero-colors, white);
  }

  &.pink {
    background-color: map-get($hero-colors, pink);
    color: map-get($hero-colors, white);
  }

  &.red {
    background-color: map-get($hero-colors, red);
    color: map-get($hero-colors, white);
  }

  &.orange {
    background-color: map-get($hero-colors, orange);
    color: map-get($hero-colors, black);
  }

  &.yellow {
    background-color: map-get($hero-colors, yellow);
    color: map-get($hero-colors, black);
  }

  &.green {
    background-color: map-get($hero-colors, green);
    color: map-get($hero-colors, black);
  }
}

.hero-body {
  padding: 3rem 1.5rem;
  flex-grow: 1;
  flex-shrink: 0;
}

.hero-image {
  height: 60vh;
  padding: 1em;
  box-sizing: border-box;
  background: linear-gradient(to bottom, #f2f2f2, #ffffff);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.hero-image h1 {
  font-size: 3rem;
  font-weight: bold;
  margin: 0 0 0.5em;
}

.hero-image p {
  font-size: 1.5rem;
  margin: 0 0 1.5em;
}

@media screen and (max-width: 576px) {
  .hero-image {
    height: 50vh;
  }

  .hero-image h1 {
    font-size: 4rem;
  }

  .hero-image p {
    font-size: 1.75rem;
  }
}

@media screen and (min-width: 576px) and (max-width: 768px) {
  .hero-image {
    height: 50vh;
  }

  .hero-image h1 {
    font-size: 4rem;
  }

  .hero-image p {
    font-size: 1.75rem;
  }
}

@media screen and (min-width: 768px) and (max-width: 992px) {
  .hero-image {
    height: 60vh;
  }

  .hero-image h1 {
    font-size: 5rem;
  }

  .hero-image p {
    font-size: 2rem;
  }
}

@media screen and (min-width: 992px) and (max-width: 1200px) {
  .hero-image {
    height: 70vh;
  }
}

@media screen and (min-width: 1200px) {
  .hero-image {
    height: 80vh;
  }
}

.hero.small .hero-body {
  padding: 1.5rem;
}

@media (min-width: 768px) and (max-width: 1023px), print {
  .hero.medium .hero-body {
    padding: 9rem 1.5rem;
  }
}

@media (min-width: 1024px) and (max-width: 1279px), print {
  .hero.large .hero-body {
    padding: 18rem 1.5rem;
  }
}

@media (min-width: 1280px) and (max-width: 1535px), print {
  .hero.xlarge .hero-body {
    padding: 24rem 1.5rem;
  }
}

@media (min-width: 1536px), print {
  .hero.xxlarge .hero-body {
    padding: 30rem 1.5rem;
  }
}

$half-height: 50vh;
$full-height: 100vh;

.hero {
  &.halfheight {
    min-height: $half-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.fullheight {
    min-height: $full-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.fullheight-with-navbar {
    min-height: $full-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }
}

$transparency: 0.3;
$breakpoint: 640px;

.hero-video {
  overflow: hidden;

  &.transparent {
    opacity: $transparency;
  }

  @media screen and (max-width: $breakpoint) {
    display: none;
  }
}

.hero-video video {
  left: 50%;
  min-height: 100%;
  min-width: 100%;
  position: absolute;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);

  &.fullscreen {
    height: 100%;
    object-fit: fill;
    position: absolute;
    width: 100%;
    z-index: -1;
  }
}

.hero-btns {
  margin-top: 1.5rem;

  .btn {
    display: flex;

    &:not(:last-child) {
      margin-bottom: 0.75rem;
      margin-right: 1.5rem;
    }
  }

  @media screen and (min-width: $breakpoint), print {
    display: flex;
    justify-content: center;

    .btn:not(:last-child) {
      margin-right: 1.5rem;
    }
  }
}

.hero-head,
.hero-foot {
  flex-grow: 0;
  flex-shrink: 0;
}

.hero-body {
  flex-grow: 1;
  flex-shrink: 0;
  padding: 3rem 1.5rem;
}

// Define the left and right section classes
.split-hero {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;

  &__left-section,
  &__right-section {
    height: 100%;
    flex: 1;
  }

  &__left-section {
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0.8),
        rgba(0, 0, 0, 0.4)
      ),
      url('path/to/image') center/cover no-repeat;
  }

  &__right-section {
    background: #fff;
  }
}

// Media query for smaller screens
@media only screen and (max-width: 768px) {
  .split-hero {
    flex-direction: column;

    &__left-section {
      background: linear-gradient(
          to right,
          rgba(0, 0, 0, 0.8),
          rgba(0, 0, 0, 0.4)
        ),
        url('path/to/image') center/cover no-repeat;
    }
  }
}

.hero-animated {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: relative;
  overflow: hidden;
  background-color: #f7f7f7;

  .hero-content {
    position: relative;
    z-index: 1;
    color: #333;

    h1 {
      font-size: 5rem;
      margin-bottom: 1rem;
      position: relative;
      animation: textGlow 1s ease-in-out infinite alternate;
    }

    p {
      font-size: 2rem;
      margin-bottom: 2rem;
    }
  }
}

@keyframes textGlow {
  0% {
    text-shadow: none;
  }
  100% {
    text-shadow: 0 0 20px #f0c419, 0 0 30px #f0c419, 0 0 40px #f0c419,
      0 0 50px #f0c419, 0 0 75px #f0c419, 0 0 100px #f0c419, 0 0 150px #f0c419;
  }
}

.hero-slideshow {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;

  .slideshow {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

    .slide {
      height: 100%;
      width: 100%;
      position: absolute;
      opacity: 0;
      transition: opacity 1s ease-in-out;

      &.active {
        opacity: 1;
        z-index: 1;
      }

      img {
        height: 100%;
        width: 100%;
        object-fit: cover;
      }
    }
  }

  .hero-content {
    z-index: 2;
    color: #fff;
    text-align: center;
    h1 {
      font-size: 4rem;
      margin-bottom: 1rem;
    }

    p {
      font-size: 2rem;
    }
  }
}
