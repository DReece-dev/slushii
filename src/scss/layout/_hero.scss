/* Default values */
.hero-section {
  background-color: var(--white);
  color: var(--black);
  align-items: stretch;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.hero-section-body {
  padding: 3rem 1.5rem;
  flex-grow: 1;
  flex-shrink: 0;
}

/* Image background */
.hero-section-image {
  height: 65vh;
  padding: 1em;
  box-sizing: border-box;
  background: url() center center no-repeat;
  background-size: cover;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* Navbar styles */
.hero-section .navbar {
  background: none;
}

/* Small size */
.hero-section.small .hero-section-body {
  padding: 1.5rem;
}

/* Medium size */
@media screen and (min-width: 768px), print {
  .hero-section.medium .hero-section-body {
    padding: 9rem 1.5rem;
  }
}

/* Large size */
@media screen and (min-width: 1024px), print {
  .hero-section.large .hero-section-body {
    padding: 18rem 1.5rem;
  }
}

/* XLarge size */
@media screen and (min-width: 1280px), print {
  .hero-section.xlarge .hero-section-body {
    padding: 24rem 1.5rem;
  }
}

/* XXLarge size */
@media screen and (min-width: 1536px), print {
  .hero-section.xxlarge .hero-section-body {
    padding: 30rem 1.5rem;
  }
}

// SCSS with variables
$half-height: 50vh;
$full-height: 100vh;

.hero {
  &.halfheight {
    min-height: $half-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.fullheight {
    min-height: $full-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.fullheight-with-navbar {
    min-height: $full-height;

    .hero-body {
      align-items: center;
      display: flex;

      > .container {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }
}

$transparency: 0.3;
$breakpoint: 640px;

.hero-video {
  overflow: hidden;

  &.transparent {
    opacity: $transparency;
  }

  @media screen and (max-width: $breakpoint) {
    display: none;
  }
}

.hero-video video {
  left: 50%;
  min-height: 100%;
  min-width: 100%;
  position: absolute;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);

  &.fullscreen {
    height: 100%;
    object-fit: fill;
    position: absolute;
    width: 100%;
    z-index: -1;
  }
}

.hero-btns {
  margin-top: 1.5rem;

  .btn {
    display: flex;

    &:not(:last-child) {
      margin-bottom: 0.75rem;
      margin-right: 1.5rem;
    }
  }

  @media screen and (min-width: $breakpoint), print {
    display: flex;
    justify-content: center;

    .btn:not(:last-child) {
      margin-right: 1.5rem;
    }
  }
}

.hero-head,
.hero-foot {
  flex-grow: 0;
  flex-shrink: 0;
}

.hero-body {
  flex-grow: 1;
  flex-shrink: 0;
  padding: 3rem 1.5rem;
}

$hero-colors: (
  white: var(--white),
  black: var(--black),
  blue: var(--blue-500),
  indigo: var(--indigo-500),
  purple: var(--purple-500),
  pink: var(--pink-500),
  red: var(--red-500),
  orange: var(--orange-500),
  yellow: var(--yellow-500),
  green: var(--green-500),
);

.hero {
  &.white {
    background-color: map-get($hero-colors, white);
    color: map-get($hero-colors, black);
  }

  &.black {
    background-color: map-get($hero-colors, black);
    color: map-get($hero-colors, white);
  }

  &.blue {
    background-color: map-get($hero-colors, blue);
    color: map-get($hero-colors, white);
  }

  &.indigo {
    background-color: map-get($hero-colors, indigo);
    color: map-get($hero-colors, white);
  }

  &.purple {
    background-color: map-get($hero-colors, purple);
    color: map-get($hero-colors, white);
  }

  &.pink {
    background-color: map-get($hero-colors, pink);
    color: map-get($hero-colors, white);
  }

  &.red {
    background-color: map-get($hero-colors, red);
    color: map-get($hero-colors, white);
  }

  &.orange {
    background-color: map-get($hero-colors, orange);
    color: map-get($hero-colors, black);
  }

  &.yellow {
    background-color: map-get($hero-colors, yellow);
    color: map-get($hero-colors, black);
  }

  &.green {
    background-color: map-get($hero-colors, green);
    color: map-get($hero-colors, black);
  }
}
