@use "sass:map";

$chip-prefix: "chip" !default;

// A single map to define all color variants.
$chip-variants: (
    "secondary": (
        "subtle-bg": #f1f5f9,
        // slate-100
        "subtle-fg": #475569,
        // slate-600
        "solid-bg": #64748b,
        // slate-500
        "solid-fg": #ffffff,
        // white
    ),
    "primary": (
        "subtle-bg": #e0e7ff,
        // indigo-100
        "subtle-fg": #4338ca,
        // indigo-700
        "solid-bg": #4f46e5,
        // indigo-600
        "solid-fg": #ffffff,
    ),
    "destructive": (
        "subtle-bg": #fee2e2,
        // red-100
        "subtle-fg": #b91c1c,
        // red-700
        "solid-bg": #dc2626,
        // red-600
        "solid-fg": #ffffff,
    ),
    "success": (
        "subtle-bg": #dcfce7,
        // green-100
        "subtle-fg": #166534,
        // green-700
        "solid-bg": #16a34a,
        // green-600
        "solid-fg": #ffffff,
    ),
) !default;

$chip-sizes: (
    "sm": (
        "font-size": 0.75rem,
        "padding": 0.125rem 0.5rem,
        "avatar-size": 1.25rem,
    ),
    "md": (
        "font-size": 0.875rem,
        "padding": 0.25rem 0.75rem,
        "avatar-size": 1.5rem,
    ),
    "lg": (
        "font-size": 1rem,
        "padding": 0.375rem 1rem,
        "avatar-size": 2rem,
    ),
) !default;

.#{$chip-prefix} {
    // CSS variables for complete control. Default to 'md' size, 'secondary' color.
    --chip-font-size: #{map.get($chip-sizes, "md", "font-size")};
    --chip-padding: #{map.get($chip-sizes, "md", "padding")};
    --chip-avatar-size: #{map.get($chip-sizes, "md", "avatar-size")};
    --chip-bg: #{map.get($chip-variants, "secondary", "subtle-bg")};
    --chip-fg: #{map.get($chip-variants, "secondary", "subtle-fg")};
    --chip-radius: 9999px; // Default to pill shape
    --chip-border-color: transparent;

    display: inline-flex; // USE FLEXBOX for alignment
    align-items: center;
    gap: 0.5em; // Consistent spacing for all child elements
    padding: var(--chip-padding);
    font-size: var(--chip-font-size);
    font-weight: 500;
    line-height: 1.2;
    white-space: nowrap;
    vertical-align: middle;
    border-radius: var(--chip-radius);
    background-color: var(--chip-bg);
    color: var(--chip-fg);
    border: 1px solid var(--chip-border-color);
    text-decoration: none;
    transition:
        background-color 0.2s ease,
        box-shadow 0.2s ease;

    // BEM: Avatar Element
    &__avatar {
        display: flex;
        align-items: center;
        justify-content: center;
        width: var(--chip-avatar-size);
        height: var(--chip-avatar-size);
        border-radius: 50%;
        overflow: hidden;

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }

    // BEM: Close Button Element
    &__close {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        margin: 0 -0.25em 0 0.25em; // Pull closer to the edge
        background: none;
        border: none;
        border-radius: 50%;
        color: inherit;
        opacity: 0.6;
        cursor: pointer;
        font-size: 1.2em;
        width: 1.2em;
        height: 1.2em;

        &:hover {
            opacity: 1;
        }
    }
}

// Generate color variants
@each $name, $colors in $chip-variants {
    .#{$chip-prefix}--#{$name} {
        --chip-bg: #{map.get($colors, "subtle-bg")};
        --chip-fg: #{map.get($colors, "subtle-fg")};
    }
}

// Generate size variants
@each $name, $props in $chip-sizes {
    .#{$chip-prefix}--#{$name} {
        --chip-font-size: #{map.get($props, "font-size")};
        --chip-padding: #{map.get($props, "padding")};
        --chip-avatar-size: #{map.get($props, "avatar-size")};
    }
}

// Style Modifier: Outline
.#{$chip-prefix}--outline {
    --chip-bg: transparent;
    --chip-border-color: currentColor; // Uses the text color for the border
}

// Style Modifier: Solid
.#{$chip-prefix}--solid {
    @each $name, $colors in $chip-variants {
        &.#{$chip-prefix}--#{$name} {
            --chip-bg: #{map.get($colors, "solid-bg")};
            --chip-fg: #{map.get($colors, "solid-fg")};
        }
    }
}

// Shape Modifier
.#{$chip-prefix}--square {
    --chip-radius: 0.375rem;
}

// State Modifier
.#{$chip-prefix}--interactive {
    cursor: pointer;
    &:hover {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
}
