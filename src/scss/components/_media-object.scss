@use "sass:map";

$media-prefix: "media" !default;

// A map to generate different size (gap) variants.
$media-gaps: (
    "sm": 0.75rem,
    "md": 1.5rem,
    // Default
    "lg": 2rem,
) !default;

.#{$media-prefix} {
    // CSS variables for complete control.
    --media-gap: #{map.get($media-gaps, "md")};
    --media-align-items: flex-start; // Default to top-aligned

    display: flex;
    align-items: var(--media-align-items);
    gap: var(--media-gap); // KEY IMPROVEMENT: Use gap for clean spacing.
    width: 100%;

    // Mobile-first: Stack by default on smaller screens.
    @media (max-width: 768px) {
        flex-direction: column;
    }

    // BEM: Figure (for the image, icon, avatar, etc.)
    &__figure {
        flex-shrink: 0; // Prevent the figure from being squashed.
    }

    // BEM: Body (for the main content)
    &__body {
        flex-grow: 1; // Allow the body to fill the remaining space.
        min-width: 0; // Prevent overflow issues with long text/content.
    }
}

// Generate size variants for different gaps.
@each $name, $gap in $media-gaps {
    .#{$media-prefix}--#{$name} {
        --media-gap: #{$gap};
    }
}

// Modifiers for vertical alignment.
.#{$media-prefix}--align-center {
    --media-align-items: center;
}
.#{$media-prefix}--align-end {
    --media-align-items: flex-end;
}

// Modifier to reverse the order of figure and body.
.#{$media-prefix}--reverse {
    flex-direction: row-reverse;
    // Ensure it still stacks correctly on mobile
    @media (max-width: 768px) {
        flex-direction: column;
    }
}

// Modifier to prevent stacking on mobile.
.#{$media-prefix}--no-stack {
    @media (max-width: 768px) {
        flex-direction: row;
    }
}
