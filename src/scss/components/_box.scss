@use "sass:map";

$box-prefix: "box" !default;

// A map of color variants to their corresponding CSS theme variables.
$box-color-variants: (
    "dark": var(--gray-900),
    "blue": var(--blue-500),
    "indigo": var(--indigo-500),
    "purple": var(--purple-500),
    "pink": var(--pink-500),
    "red": var(--red-500),
    "orange": var(--orange-500),
    "yellow": var(--yellow-500),
    "green": var(--green-500),
) !default;

// Maps for generating shadow and radius variants.
$box-shadows: (
    "sm":
        "0 0.125em 0.25em -0.0625em rgba(10, 10, 10, 0.08), 0 0 0 1px rgba(10, 10, 10, 0.02)",
    "md":
        "0 0.5em 1em -0.125em rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.02)",
    // Default
    "lg":
        "0 1em 1.5em -0.25em rgba(10, 10, 10, 0.12), 0 0 0 1px rgba(10, 10, 10, 0.02)",
) !default;

$box-radii: (
    "sm": 0.25rem,
    // 4px
    "md": 0.375rem,
    // 6px (Default)
    "lg": 0.75rem, // 12px
) !default;

.#{$box-prefix} {
    // CSS variables control the entire component's appearance.
    --box-bg: var(--white);
    --box-fg: var(--gray-900); // Add a foreground color for text content
    --box-padding: 1.25rem;
    --box-radius: #{map.get($box-radii, "md")};
    --box-shadow: #{map.get($box-shadows, "md")};
    --box-shadow-hover-ring: var(--indigo-500); // Default hover ring color

    display: block;
    background-color: var(--box-bg);
    color: var(--box-fg);
    border-radius: var(--box-radius);
    box-shadow: var(--box-shadow);
    padding: var(--box-padding);
    text-decoration: none;
    transition:
        box-shadow 0.2s ease-in-out,
        transform 0.2s ease-in-out;
}

// Generate color variants from the map
@each $name, $color in $box-color-variants {
    .#{$box-prefix}--#{$name} {
        --box-bg: #{$color};
        // Assume dark backgrounds should have light text
        --box-fg: var(--white);
        --box-shadow-hover-ring: #{$color};
    }
}
// Special case for the dark variant to have its own hover ring
.#{$box-prefix}--dark {
    --box-shadow-hover-ring: var(--gray-400);
}

// Generate shadow variants
@each $name, $shadow in $box-shadows {
    .#{$box-prefix}--shadow-#{$name} {
        --box-shadow: #{$shadow};
    }
}

// Generate border-radius variants
@each $name, $radius in $box-radii {
    .#{$box-prefix}--radius-#{$name} {
        --box-radius: #{$radius};
    }
}

// Modifier for making any box interactive
.#{$box-prefix}--interactive {
    cursor: pointer;

    &:hover,
    &:focus-visible {
        // Use focus-visible for better accessibility
        // Add a "ring" shadow on top of the base shadow
        box-shadow:
            var(--box-shadow),
            0 0 0 2px var(--box-shadow-hover-ring);
        transform: translateY(-2px);
    }

    &:active {
        // A subtle press-in effect
        box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.2);
        transform: translateY(0);
    }
}

// Modifier to remove padding, useful for image cards
.#{$box-prefix}--bleed {
    --box-padding: 0;
}
