@use "sass:map";

$level-prefix: "level" !default;

// A map to generate different size (gap) variants.
$level-gaps: (
    "sm": 0.5rem,
    "md": 1rem,
    // Default
    "lg": 2rem,
) !default;

.#{$level-prefix} {
    // CSS variables for complete control.
    --level-gap: #{map.get($level-gaps, "md")};
    --level-block-spacing: 1.5rem; // The vertical gap when items stack on mobile.
    --level-align-items: center;

    display: flex;
    align-items: var(--level-align-items);
    justify-content: space-between;

    // Mobile-first approach: Stack vertically by default.
    flex-direction: column;
    gap: var(--level-block-spacing);

    // Switch to horizontal layout on desktop.
    @media (min-width: 768px) {
        flex-direction: row;
        gap: var(--level-gap);
    }

    // BEM: Left & Right Sections
    &__left,
    &__right {
        display: flex;
        align-items: inherit; // Inherit vertical alignment from the parent
        flex-shrink: 0;
        gap: var(
            --level-gap
        ); // Consistent spacing for items inside the section.
    }

    &__left {
        justify-content: flex-start;
    }
    &__right {
        justify-content: flex-end;
    }

    // BEM: Individual Item
    &__item {
        display: flex;
        align-items: inherit;
        justify-content: center;

        // Modifier for items that should expand to fill space
        &--grow {
            flex-grow: 1;
        }
    }
}

// Generate size variants for different gaps.
@each $name, $gap in $level-gaps {
    .#{$level-prefix}--#{$name} {
        --level-gap: #{$gap};
        --level-block-spacing: #{$gap * 1.5};
    }
}

// Modifier to force horizontal layout on mobile.
.#{$level-prefix}--no-stack {
    flex-direction: row;
    gap: var(--level-gap);
}

// Modifiers for vertical alignment.
.#{$level-prefix}--align-start {
    --level-align-items: flex-start;
}
.#{$level-prefix}--align-end {
    --level-align-items: flex-end;
}

// Modifier to force a vertical layout on all screen sizes.
.#{$level-prefix}--vertical {
    flex-direction: column;
    gap: var(--level-block-spacing);
    align-items: flex-start; // A sensible default for vertical layouts.
}
