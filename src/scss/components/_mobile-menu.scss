@use "sass:map";

$prefix: "mobile-nav" !default;

// A map to hold all default CSS variables for easy setup.
$config: (
    // Sizing
    "toggle-size": 44px,
    "icon-bar-width": 24px,
    "icon-bar-height": 2px,
    "panel-width": 300px,
    "panel-padding": 1.5rem,
    "link-padding": 1rem 0,
    "link-font-size": 1.25rem,
    // Colors (Light Theme)
    "bg": #ffffff,
    "fg": #111827,
    "icon-bg": #111827,
    "overlay-bg": rgba(0, 0, 0, 0.5),
    "border": #e5e7eb,
    // Theming (Dark Theme)
    "dark-bg": #1f2937,
    "dark-fg": #f9fafb,
    "dark-icon-bg": #f9fafb,
    "dark-border": #374151,
    // Animation
    "transition-duration": 0.3s,
    "transition-timing": ease-in-out,
    // Positioning
    "z-index-panel": 1000,
    "z-index-overlay": 999,
    "z-index-toggle": 1001
) !default;

.#{$prefix} {
    // Generate CSS custom properties from the $config map
    @each $key, $value in $config {
        --nav-#{$key}: #{$value};
    }

    // The main container doesn't need much styling itself
    // It's a state machine controlled by the .is-open class

    &__toggle {
        // Reset button styles for a clean slate
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: var(--nav-toggle-size);
        height: var(--nav-toggle-size);
        padding: 0;
        margin: 0;
        border: none;
        background: none;
        cursor: pointer;
        position: relative; // For z-index stacking
        z-index: var(--nav-z-index-toggle);
        // Prevents outline on tap on some mobile browsers
        -webkit-tap-highlight-color: transparent;
    }

    &__icon {
        // This is the container for the 3 hamburger bars
        position: relative;
        width: var(--nav-icon-bar-width);
        height: var(--nav-icon-bar-height);

        // The three bars of the hamburger icon
        span {
            display: block;
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: var(--nav-icon-bg);
            border-radius: 2px;
            transition:
                transform var(--nav-transition-duration)
                    var(--nav-transition-timing),
                opacity var(--nav-transition-duration)
                    var(--nav-transition-timing);

            // Position the top and bottom bars
            &:nth-child(1) {
                transform: translateY(-8px);
            }
            &:nth-child(3) {
                transform: translateY(8px);
            }
        }
    }

    &__overlay {
        position: fixed;
        inset: 0; // top, right, bottom, left = 0
        background-color: var(--nav-overlay-bg);
        z-index: var(--nav-z-index-overlay);
        // Hidden by default
        opacity: 0;
        visibility: hidden;
        transition:
            opacity var(--nav-transition-duration) var(--nav-transition-timing),
            visibility 0s var(--nav-transition-duration) linear;
    }

    &__panel {
        position: fixed;
        top: 0;
        right: 0;
        width: 100%;
        max-width: var(--nav-panel-width);
        height: 100vh; // Full viewport height
        background-color: var(--nav-bg);
        box-shadow: -5px 0 25px -10px rgba(0, 0, 0, 0.2);
        z-index: var(--nav-z-index-panel);
        display: flex;
        flex-direction: column;
        padding: var(--nav-panel-padding);
        // Hidden by default (moved off-screen)
        transform: translateX(100%);
        visibility: hidden;
        transition:
            transform var(--nav-transition-duration)
                var(--nav-transition-timing),
            visibility 0s var(--nav-transition-duration) linear;
    }

    &__links {
        // Container for the navigation links
        margin-top: calc(var(--nav-toggle-size) + 1rem);
        display: flex;
        flex-direction: column;
    }

    &__link {
        color: var(--nav-fg);
        text-decoration: none;
        font-size: var(--nav-link-font-size);
        font-weight: 600;
        padding: var(--nav-link-padding);
        border-bottom: 1px solid var(--nav-border);
        transition: color 0.2s ease;

        &:hover {
            color: var(--nav-icon-bg); // Use a primary color if available
        }
    }
}

.#{$prefix}.is-open {
    .#{$prefix}__icon {
        // Animate the icon into an "X"
        span {
            // Middle bar fades out
            &:nth-child(2) {
                opacity: 0;
            }
            // Top and bottom bars rotate to form the X
            &:nth-child(1) {
                transform: translateY(0) rotate(45deg);
            }
            &:nth-child(3) {
                transform: translateY(0) rotate(-45deg);
            }
        }
    }

    .#{$prefix}__overlay {
        opacity: 1;
        visibility: visible;
        transition-delay: 0s; // Reset delay for showing
    }

    .#{$prefix}__panel {
        transform: translateX(0);
        visibility: visible;
        transition-delay: 0s; // Reset delay for showing
    }
}

// 1. Dark Theme Variant
.#{$prefix}--dark {
    --nav-bg: var(--nav-dark-bg);
    --nav-fg: var(--nav-dark-fg);
    --nav-icon-bg: var(--nav-dark-icon-bg);
    --nav-border: var(--nav-dark-border);
}

// 2. Slide from Left Variant
.#{$prefix}--from-left {
    .#{$prefix}__panel {
        right: auto;
        left: 0;
        transform: translateX(-100%);
    }

    // When open, it moves back to its original position
    &.is-open .#{$prefix}__panel {
        transform: translateX(0);
    }
}
