@use "sass:map"; // Added to use modern map functions

// Modern Alert Variables
$alert-border-radius: 0.75rem;
$alert-padding: 1rem 1.25rem;
$alert-margin: 1rem 0;
$alert-font-size: 0.875rem;
$alert-line-height: 1.5;
$alert-shadow:
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
$alert-shadow-lg:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);

// Animation variables
$alert-duration: 0.3s;
$alert-easing: cubic-bezier(0.4, 0, 0.2, 1);
$alert-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
$alert-slide-duration: 0.4s;

// Modern color system
$alert-colors: (
    primary: (
        bg: #3b82f6,
        text: #ffffff,
        border: #2563eb,
        icon: #ffffff,
    ),
    secondary: (
        bg: #6b7280,
        text: #ffffff,
        border: #4b5563,
        icon: #ffffff,
    ),
    success: (
        bg: #10b981,
        text: #ffffff,
        border: #059669,
        icon: #ffffff,
    ),
    warning: (
        bg: #f59e0b,
        text: #1f2937,
        border: #d97706,
        icon: #1f2937,
    ),
    error: (
        bg: #ef4444,
        text: #ffffff,
        border: #dc2626,
        icon: #ffffff,
    ),
    info: (
        bg: #06b6d4,
        text: #ffffff,
        border: #0891b2,
        icon: #ffffff,
    ),
    light: (
        bg: #f8fafc,
        text: #1e293b,
        border: #e2e8f0,
        icon: #64748b,
    ),
    dark: (
        bg: #1e293b,
        text: #f8fafc,
        border: #0f172a,
        icon: #f8fafc,
    ),
);

// Modern mixins
@mixin alert-variant($bg, $text, $border, $icon) {
    background-color: $bg;
    color: $text;
    border-color: $border;

    .alert-icon {
        color: $icon;
    }

    .alert-close {
        color: $text;

        &:hover {
            background-color: rgba($text, 0.1);
        }
    }

    .alert-link {
        color: $text;

        &:hover {
            color: rgba($text, 0.8);
        }
    }

    // Progress bar
    .alert-progress {
        background-color: rgba($text, 0.3);

        &::after {
            background-color: $text;
        }
    }
}

@mixin glass-effect($opacity: 0.9) {
    background: rgba(255, 255, 255, $opacity);
    backdrop-filter: blur(12px) saturate(180%);
    -webkit-backdrop-filter: blur(12px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

@mixin modern-shadow($level: 1) {
    @if $level == 1 {
        box-shadow: $alert-shadow;
    } @else {
        box-shadow: $alert-shadow-lg;
    }
}

@mixin slide-in-animation {
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @keyframes slideOutRight {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }
        to {
            opacity: 0;
            transform: translateY(-10px);
        }
    }
}

// Include animations
@include slide-in-animation;

// Base alert component
.alert {
    position: relative;
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: $alert-padding;
    margin: $alert-margin;
    border-radius: $alert-border-radius;
    border: 1px solid transparent;
    font-size: $alert-font-size;
    line-height: $alert-line-height;
    @include modern-shadow(1);
    transition: all $alert-duration $alert-easing;

    // Default primary styling (Corrected with map.get)
    @include alert-variant(
        map.get(map.get($alert-colors, primary), bg),
        map.get(map.get($alert-colors, primary), text),
        map.get(map.get($alert-colors, primary), border),
        map.get(map.get($alert-colors, primary), icon)
    );

    // Icon container
    &-icon {
        flex-shrink: 0;
        width: 1.25rem;
        height: 1.25rem;
        margin-top: 0.125rem;
        transition: transform $alert-duration $alert-bounce;

        &:hover {
            transform: scale(1.1);
        }

        // Default icons for different types
        &.icon-info::before {
            content: "ℹ";
            font-style: normal;
            font-weight: bold;
        }
        &.icon-success::before {
            content: "✓";
            font-style: normal;
            font-weight: bold;
        }
        &.icon-warning::before {
            content: "⚠";
            font-style: normal;
            font-weight: bold;
        }
        &.icon-error::before {
            content: "✕";
            font-style: normal;
            font-weight: bold;
        }
    }

    // Content container
    &-content {
        flex: 1;
        min-width: 0;
    }

    // Alert heading
    &-heading {
        font-size: 1rem;
        font-weight: 600;
        margin: 0 0 0.25rem 0;
        color: inherit;
    }

    // Alert body text
    &-body {
        margin: 0;

        p {
            margin: 0 0 0.5rem 0;
            &:last-child {
                margin-bottom: 0;
            }
        }
    }

    // Alert links
    &-link {
        color: inherit;
        text-decoration: underline;
        font-weight: 500;
        cursor: pointer;
        transition: all $alert-duration $alert-easing;

        &:hover {
            text-decoration: none;
            opacity: 0.8;
        }
    }

    // Close button
    &-close {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2rem;
        height: 2rem;
        border: none;
        background: transparent;
        color: inherit;
        cursor: pointer;
        border-radius: 0.375rem;
        font-size: 1.125rem;
        line-height: 1;
        transition: all $alert-duration $alert-easing;

        &:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: scale(1.1);
        }

        &:focus {
            outline: 2px solid currentColor;
            outline-offset: 2px;
        }

        &::before {
            content: "×";
            font-weight: bold;
        }
    }

    // Actions container
    &-actions {
        display: flex;
        gap: 0.5rem;
        margin-top: 0.75rem;

        .btn {
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            border: 1px solid currentColor;
            background: transparent;
            color: inherit;
            font-size: 0.75rem;
            font-weight: 500;
            cursor: pointer;
            transition: all $alert-duration $alert-easing;

            &:hover {
                background: currentColor;
                color: var(--alert-bg, #3b82f6);
            }

            &.btn-primary {
                background: currentColor;
                color: var(--alert-bg, #3b82f6);

                &:hover {
                    background: transparent;
                    color: inherit;
                }
            }
        }
    }

    // Progress bar for timed alerts
    &-progress {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 3px;
        background-color: rgba(255, 255, 255, 0.3);
        border-radius: 0 0 $alert-border-radius $alert-border-radius;
        overflow: hidden;

        &::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background-color: currentColor;
            animation: progress-countdown var(--duration, 5s) linear forwards;
        }
    }

    // Dismiss animation
    &.disposing {
        animation: fadeOut $alert-duration $alert-easing forwards;
    }
    &.disposed {
        display: none;
    }
    &.show {
        animation: fadeIn $alert-duration $alert-easing;
    }
}

// Progress countdown animation
@keyframes progress-countdown {
    from {
        width: 100%;
    }
    to {
        width: 0%;
    }
}

// Generate color variants (Corrected with map.get)
@each $name, $colors in $alert-colors {
    .alert-#{$name} {
        @include alert-variant(
            map.get($colors, bg),
            map.get($colors, text),
            map.get($colors, border),
            map.get($colors, icon)
        );
        --alert-bg: #{map.get($colors, bg)};
    }
}

// 1. Outlined variant (Corrected with map.get)
.alert-outlined {
    background: transparent;
    border-width: 2px;

    @each $name, $colors in $alert-colors {
        &.alert-#{$name} {
            color: map.get($colors, bg);
            border-color: map.get($colors, bg);
            background: rgba(map.get($colors, bg), 0.05);

            .alert-icon {
                color: map.get($colors, bg);
            }
            .alert-close {
                color: map.get($colors, bg);
                &:hover {
                    background-color: rgba(map.get($colors, bg), 0.1);
                }
            }
        }
    }
}

// 2. Soft variant (Corrected with map.get)
.alert-soft {
    @each $name, $colors in $alert-colors {
        &.alert-#{$name} {
            background: rgba(map.get($colors, bg), 0.1);
            color: map.get($colors, bg);
            border-color: rgba(map.get($colors, bg), 0.2);

            .alert-icon,
            .alert-close {
                color: map.get($colors, bg);
            }
        }
    }
}

// 3. Minimal variant (Corrected with map.get)
.alert-minimal {
    background: transparent;
    border: none;
    box-shadow: none;
    border-left: 4px solid;
    border-radius: 0;

    @each $name, $colors in $alert-colors {
        &.alert-#{$name} {
            border-left-color: map.get($colors, bg);
            color: map.get($colors, bg);
        }
    }
}

// 4. Modern card variant
.alert-modern {
    border-radius: 1rem;
    @include modern-shadow(2);
    border: none;
    padding: 1.5rem;

    &:hover {
        transform: translateY(-2px);
        @include modern-shadow(2);
    }
}

// 5. Glass morphism variant
.alert-glass {
    @include glass-effect(0.9);

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: inherit;
        border-radius: inherit;
        z-index: -1;
    }
}

// 6. Gradient variant
.alert-gradient {
    background: linear-gradient(
        135deg,
        var(--alert-bg, #3b82f6),
        var(--alert-bg-secondary, #1d4ed8)
    );
    border: none;

    &.alert-success {
        background: linear-gradient(135deg, #10b981, #059669);
    }
    &.alert-warning {
        background: linear-gradient(135deg, #f59e0b, #d97706);
    }
    &.alert-error {
        background: linear-gradient(135deg, #ef4444, #dc2626);
    }
}

// 7. Neumorphism variant
.alert-neumorphism {
    background: #f0f0f3;
    border: none;
    box-shadow:
        8px 8px 16px #bebebe,
        -8px -8px 16px #ffffff;
    color: #4a5568;

    .alert-close:hover {
        box-shadow:
            inset 2px 2px 4px #bebebe,
            inset -2px -2px 4px #ffffff;
    }
}

// 8. Neon variant
.alert-neon {
    background: #000;
    border: 1px solid;
    color: var(--neon-color, #00ff41);
    border-color: var(--neon-color, #00ff41);
    box-shadow:
        0 0 10px var(--neon-color, #00ff41),
        inset 0 0 10px rgba(0, 255, 65, 0.1);

    .alert-icon,
    .alert-close {
        color: var(--neon-color, #00ff41);
        text-shadow: 0 0 5px var(--neon-color, #00ff41);
    }

    &.alert-error {
        --neon-color: #ff0040;
    }
    &.alert-warning {
        --neon-color: #ffff00;
    }
    &.alert-info {
        --neon-color: #00ffff;
    }
}

// Toast container
.alert-container {
    position: fixed;
    z-index: 1050;
    max-width: 24rem;

    &.top-right {
        top: 1rem;
        right: 1rem;
    }
    &.top-left {
        top: 1rem;
        left: 1rem;
    }
    &.top-center {
        top: 1rem;
        left: 50%;
        transform: translateX(-50%);
    }
    &.bottom-right {
        bottom: 1rem;
        right: 1rem;
    }
    &.bottom-left {
        bottom: 1rem;
        left: 1rem;
    }
    &.bottom-center {
        bottom: 1rem;
        left: 50%;
        transform: translateX(-50%);
    }

    .alert {
        margin-bottom: 0.75rem;
        animation: slideInRight $alert-slide-duration $alert-easing;
        &.disposing {
            animation: slideOutRight $alert-slide-duration $alert-easing
                forwards;
        }
    }
}

// Sticky alerts (legacy support)
.sticky-alerts {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 1050;
    max-width: 24rem;

    .alert {
        width: 100%;
        margin-bottom: 0.75rem;
        transform: translateX(100%);
        opacity: 0;

        &.show {
            transform: translateX(0);
            opacity: 1;
            animation: slideInRight $alert-slide-duration $alert-easing;
        }
        &.fade {
            animation: slideOutRight $alert-slide-duration $alert-easing
                forwards;
        }
    }
}

// Size variants
.alert-sm {
    padding: 0.75rem 1rem;
    font-size: 0.75rem;
    .alert-heading {
        font-size: 0.875rem;
        margin-bottom: 0.125rem;
    }
    .alert-icon {
        width: 1rem;
        height: 1rem;
    }
    .alert-close {
        width: 1.5rem;
        height: 1.5rem;
        top: 0.375rem;
        right: 0.375rem;
    }
}

.alert-lg {
    padding: 1.5rem 2rem;
    font-size: 1rem;
    .alert-heading {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
    }
    .alert-icon {
        width: 1.5rem;
        height: 1.5rem;
    }
    .alert-close {
        width: 2.5rem;
        height: 2.5rem;
        top: 0.75rem;
        right: 0.75rem;
    }
}

@media (max-width: 640px) {
    .alert-container,
    .sticky-alerts {
        left: 1rem;
        right: 1rem;
        max-width: none;
        &.top-center,
        &.bottom-center {
            transform: none;
        }
    }
    .alert {
        flex-direction: column;
        text-align: center;
        &-icon {
            align-self: center;
            margin-bottom: 0.5rem;
        }
        &-close {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
        }
        &-actions {
            justify-content: center;
        }
    }
}

// Accessibility features
@media (prefers-reduced-motion: reduce) {
    .alert,
    .alert *,
    .alert::before,
    .alert::after {
        animation: none !important;
        transition: none !important;
    }
}
@media (prefers-contrast: high) {
    .alert {
        border-width: 2px;
        &-close:focus {
            outline: 3px solid currentColor;
            outline-offset: 3px;
        }
    }
}
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Dark Mode Overrides
.dark-mode,
[data-theme="dark"] {
    .alert-light {
        background: #374151;
        color: #f3f4f6;
        border-color: #4b5563;
    }
    .alert-glass {
        @include glass-effect(0.1);
        background: rgba(31, 41, 55, 0.8);
        border-color: rgba(255, 255, 255, 0.1);
    }
    .alert-neumorphism {
        background: #2a2a2a;
        color: #f3f4f6;
        box-shadow:
            8px 8px 16px #1a1a1a,
            -8px -8px 16px #3a3a3a;
    }
}
