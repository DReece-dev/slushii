@use "sass:map";

$prefix: "alert" !default;

// A map to hold all default CSS variables for easy setup and theming.
$config: (
    // Sizing & Spacing
    "padding": 1rem 1.25rem,
    "radius": 0.75rem,
    "border-width": 1px,
    "accent-width": 4px,

    // Theming
    // FIXED: Wrapped multi-part shadow value in parentheses
    "shadow": (
            0 4px 6px -1px rgba(0, 0, 0, 0.1),
            0 2px 4px -2px rgba(0, 0, 0, 0.1)
        ),
    // State Colors (Backgrounds)
    "info-bg": #eff6ff,
    // blue-50
    "success-bg": #f0fdf4,
    // green-50
    "warning-bg": #fffbeb,
    // yellow-50
    "error-bg": #fef2f2,

    // red-50
    // State Colors (Foregrounds / Accents)
    "info-fg": #3b82f6,
    // blue-500
    "success-fg": #22c55e,
    // green-500
    "warning-fg": #f59e0b,
    // yellow-500
    "error-fg": #ef4444,

    // red-500
    // Dark Theme State Colors (Backgrounds)
    "dark-info-bg": #1e293b,
    // slate-800
    "dark-success-bg": #166534,
    // green-800 (adjusted for better contrast)
    "dark-warning-bg": #854d0e,
    // amber-800 (adjusted for better contrast)
    "dark-error-bg": #991b1b,

    // red-800 (adjusted for better contrast)
    // Dark Theme State Colors (Foregrounds / Accents)
    "dark-info-fg": #60a5fa,
    // blue-400
    "dark-success-fg": #4ade80,
    // green-400
    "dark-warning-fg": #facc15,
    // yellow-400
    "dark-error-fg": #f87171,

    // red-400
    // Animation
    "transition-duration": "0.2s"
) !default;

//==========================================================================
// 1. KEYFRAMES
//==========================================================================
@keyframes alert-fade-in {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes alert-fade-out {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

.#{$prefix} {
    // Generate CSS custom properties from the $config map
    @each $key, $value in $config {
        --alert-#{$key}: #{$value};
    }

    // Default to the 'info' state
    --alert-bg-color: var(--alert-info-bg);
    --alert-accent-color: var(--alert-info-fg);
    --alert-fg-color: #1e3a8a; // blue-900

    display: flex;
    gap: 0.75rem;
    padding: var(--alert-padding);
    border-radius: var(--alert-radius);
    background-color: var(--alert-bg-color);
    color: var(--alert-fg-color);
    box-shadow: var(--alert-shadow);
    animation: alert-fade-in var(--alert-transition-duration) ease-out;

    &.is-dismissing {
        animation: alert-fade-out var(--alert-transition-duration) ease-in
            forwards;
    }

    // --- Elements ---
    &__icon {
        flex-shrink: 0;
        width: 1.25rem;
        height: 1.25rem;
        margin-top: 0.125rem;
        color: var(--alert-accent-color);
    }

    &__content {
        flex-grow: 1;
        min-width: 0;
    }

    &__title {
        margin: 0 0 0.25rem;
        font-weight: 600;
        font-size: 1rem;
        color: var(--alert-fg-color);
    }

    &__body {
        margin: 0;
        font-size: 0.875rem;
        line-height: 1.5;
        color: var(--alert-accent-color);
    }

    &__close {
        flex-shrink: 0;
        margin-left: auto;
        padding: 0.25rem;
        border: none;
        background-color: transparent;
        border-radius: 0.375rem;
        color: var(--alert-accent-color);
        cursor: pointer;
        transition: background-color var(--alert-transition-duration);

        &:hover {
            background-color: rgba(0, 0, 0, 0.1);
        }
    }
}

// --- State Variants ---
.#{$prefix}--success {
    --alert-bg-color: var(--alert-success-bg);
    --alert-accent-color: var(--alert-success-fg);
    --alert-fg-color: #14532d; // green-900
}
.#{$prefix}--warning {
    --alert-bg-color: var(--alert-warning-bg);
    --alert-accent-color: var(--alert-warning-fg);
    --alert-fg-color: #78350f; // amber-900
}
.#{$prefix}--error {
    --alert-bg-color: var(--alert-error-bg);
    --alert-accent-color: var(--alert-error-fg);
    --alert-fg-color: #7f1d1d; // red-900
}

// --- Style Variants ---

// Outlined: Transparent background with a colored border
.#{$prefix}--outlined {
    --alert-bg-color: transparent;
    border: var(--alert-border-width) solid var(--alert-accent-color);
    box-shadow: none;

    .#{$prefix}__title {
        color: var(--alert-accent-color);
    }
}

// Solid: A solid, deep color background
.#{$prefix}--solid {
    --alert-bg-color: var(--alert-accent-color);
    --alert-fg-color: white; // Text is always light on a solid background
    --alert-accent-color: white; // Icons and close buttons are also light
}

// Left Accent: A border only on the left side
.#{$prefix}--left-accent {
    border-left: var(--alert-accent-width) solid var(--alert-accent-color);
}

// Top Accent: A border only on the top side
.#{$prefix}--top-accent {
    border-top: var(--alert-accent-width) solid var(--alert-accent-color);
    // Remove other borders for a clean look
    border-left: none;
    border-right: none;
    border-bottom: none;
}

// Minimal: No background or borders, just colored text
.#{$prefix}--minimal {
    --alert-bg-color: transparent;
    padding-left: 0;
    padding-right: 0;
    box-shadow: none;

    .#{$prefix}__title {
        color: var(--alert-accent-color);
    }
}

// --- Dark Mode ---
.#{$prefix}--dark {
    // Override the state colors with their dark theme equivalents
    --alert-info-bg: var(--dark-info-bg);
    --alert-success-bg: var(--dark-success-bg);
    --alert-warning-bg: var(--dark-warning-bg);
    --alert-error-bg: var(--dark-error-bg);

    --alert-info-fg: var(--dark-info-fg);
    --alert-success-fg: var(--dark-success-fg);
    --alert-warning-fg: var(--dark-warning-fg);
    --alert-error-fg: var(--dark-error-fg);

    // Dark text colors are usually the lighter accent colors
    &.#{$prefix}--success {
        --alert-fg-color: var(--dark-success-fg);
    }
    &.#{$prefix}--warning {
        --alert-fg-color: var(--dark-warning-fg);
    }
    &.#{$prefix}--error {
        --alert-fg-color: var(--dark-error-fg);
    }
    &.#{$prefix}--info,
    &:not(.#{$prefix}--success):not(.#{$prefix}--warning):not(
            .#{$prefix}--error
        ) {
        --alert-fg-color: var(--dark-info-fg);
    }
}

// Centered Layout
.#{$prefix}--centered {
    flex-direction: column;
    align-items: center;
    text-align: center;
    .#{$prefix}__icon {
        margin-bottom: 0.5rem;
    }
    .#{$prefix}__close {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
    }
}
// No Shadow
.#{$prefix}--flat {
    box-shadow: none;
}
// Large Sizing
.#{$prefix}--lg {
    --alert-padding: 1.5rem;
    font-size: 1rem;
    .#{$prefix}__title {
        font-size: 1.25rem;
    }
    .#{$prefix}__icon {
        width: 1.5rem;
        height: 1.5rem;
    }
}
// Small Sizing
.#{$prefix}--sm {
    --alert-padding: 0.75rem 1rem;
    .#{$prefix}__title {
        font-size: 0.875rem;
    }
    .#{$prefix}__body {
        font-size: 0.75rem;
    }
    .#{$prefix}__icon {
        width: 1rem;
        height: 1rem;
    }
}
