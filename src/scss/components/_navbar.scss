@use "sass:map";

$prefix: "navbar" !default;

// A map to hold all default CSS variables for easy setup and theming.
$config: (
    // Sizing & Spacing
    "height": 4rem,
    "padding-x": 1.5rem,
    "radius": 0.75rem,
    "container-width": "1280px",
    "z-index": 1000,

    // Theming
    "bg": #ffffff,
    "fg": #020817,
    // slate-950
    "muted-fg": #64748b,
    // slate-500
    "border": #e2e8f0,
    // slate-200
    "card-bg": #ffffff,
    "hover-bg": #f1f5f9,
    // slate-100
    "shadow": 0 1px 2px 0 rgba(0, 0, 0, 0.05),
    "shadow-lg": (
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -2px rgba(0, 0, 0, 0.1)
    ),
    // Primary/Action Colors
    "primary": #2563eb,
    // blue-600
    "primary-fg": #ffffff,

    // Dark Theme
    "dark-bg": #020817,
    // slate-950
    "dark-fg": #f8fafc,
    // slate-50
    "dark-muted-fg": #94a3b8,
    // slate-400
    "dark-border": #1e293b,
    // slate-800
    "dark-card-bg": #0f172a,
    // slate-900
    "dark-hover-bg": #1e293b,
    // slate-800
    "dark-primary": #3b82f6,
    // blue-500
    // Animation
    "transition": "all 0.2s ease-in-out",
    "breakpoint-lg": "1024px"
) !default;

.#{$prefix} {
    // Generate CSS custom properties from the $config map
    @each $key, $value in $config {
        --navbar-#{$key}: #{$value};
    }

    height: var(--navbar-height);
    width: 100%;
    background-color: var(--navbar-bg);
    border-bottom: 1px solid var(--navbar-border);
    transition: var(--navbar-transition);
    z-index: var(--navbar-z-index);
    position: relative;

    // --- Elements ---
    &__container {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding-inline: var(--navbar-padding-x);
        gap: 1rem;
    }

    &__brand {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--navbar-fg);
        text-decoration: none;
        flex-shrink: 0; // Prevent brand from shrinking on small screens
    }

    &__menu {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        // Hide on mobile by default
        @media (max-width: map.get($config, "breakpoint-lg")) {
            display: none;
        }
    }

    &__nav {
        display: flex;
        gap: 0.25rem;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    &__item {
        > a {
            display: flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: calc(var(--navbar-radius) * 0.75);
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--navbar-muted-fg);
            text-decoration: none;
            transition: var(--navbar-transition);

            &:hover {
                color: var(--navbar-fg);
                background-color: var(--navbar-hover-bg);
            }
            &.is-active {
                color: var(--navbar-fg);
                font-weight: 600;
            }
        }
    }

    &__actions {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        @media (max-width: map.get($config, "breakpoint-lg")) {
            display: none;
        }
    }

    &__burger {
        display: none; // Hidden by default
        width: 2.5rem;
        height: 2.5rem;
        border: none;
        border-radius: calc(var(--navbar-radius) * 0.75);
        background: transparent;
        cursor: pointer;
        position: relative;
        align-items: center;
        justify-content: center;
        transition: background-color 0.2s ease;

        &:hover {
            background-color: var(--navbar-hover-bg);
        }

        span {
            display: block;
            width: 1.25rem;
            height: 2px;
            background: var(--navbar-fg);
            border-radius: 1px;
            transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            position: absolute;
            &:nth-child(1) {
                transform: translateY(-5px);
            }
            &:nth-child(3) {
                transform: translateY(5px);
            }
        }

        @media (max-width: map.get($config, "breakpoint-lg")) {
            display: inline-flex;
        }
    }

    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: rotate(45deg);
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: rotate(-45deg);
        }
    }

    // --- Mobile Menu Container ---
    &__mobile-menu {
        position: absolute;
        top: var(--navbar-height);
        left: 0;
        width: 100%;
        padding: 1rem;
        background-color: var(--navbar-bg);
        border-bottom: 1px solid var(--navbar-border);
        box-shadow: var(--navbar-shadow);
        // Hidden state
        opacity: 0;
        transform: translateY(-10px);
        visibility: hidden;
        pointer-events: none;
        transition:
            opacity 0.2s ease,
            transform 0.2s ease,
            visibility 0.2s;

        .#{$prefix}__nav {
            flex-direction: column;
            gap: 0.5rem;
        }
        .#{$prefix}__actions {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            margin-top: 1rem;
            align-items: stretch;
        }
        .#{$prefix}__actions .btn {
            width: 100%;
            text-align: center;
            justify-content: center;
        }
    }

    &.is-mobile-menu-open .#{$prefix}__mobile-menu {
        opacity: 1;
        transform: translateY(0);
        visibility: visible;
        pointer-events: auto;
    }
}

// --- Theming ---
.#{$prefix}--dark {
    // Redefine variables for the dark theme
    --navbar-bg: var(--navbar-dark-bg);
    --navbar-fg: var(--navbar-dark-fg);
    --navbar-muted-fg: var(--navbar-dark-muted-fg);
    --navbar-border: var(--navbar-dark-border);
    --navbar-card-bg: var(--navbar-dark-card-bg);
    --navbar-hover-bg: var(--navbar-dark-hover-bg);
    --navbar-primary: var(--navbar-dark-primary);
    --navbar-primary-fg: var(--navbar-fg);
}

.#{$prefix}--primary-accent {
    border-top: 3px solid var(--navbar-primary);
    border-bottom: none;
}

.#{$prefix}--gradient {
    background: linear-gradient(
        to right,
        var(--navbar-primary),
        var(--navbar-dark-primary)
    );
    --navbar-fg: var(--navbar-primary-fg);
    --navbar-muted-fg: rgba(255, 255, 255, 0.8);
    --navbar-hover-bg: rgba(255, 255, 255, 0.1);
    --navbar-border: transparent;
}

// --- Structural & Positional ---
.#{$prefix}--fixed {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
}

.#{$prefix}--sticky {
    position: sticky;
    top: 0;
}

.#{$prefix}--contained .#{$prefix}__container {
    max-width: var(--navbar-container-width);
    margin-inline: auto;
}

.#{$prefix}--floating {
    border: 1px solid var(--navbar-border);
    border-radius: var(--navbar-radius);
    box-shadow: var(--navbar-shadow-lg);
    margin: 1rem var(--navbar-padding-x);
    width: calc(100% - (var(--navbar-padding-x) * 2));
}

// --- Stylistic Indicators ---
.#{$prefix}--underline {
    .#{$prefix}__item > a {
        position: relative;
        &::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0.5rem;
            right: 0.5rem;
            height: 2px;
            background-color: var(--navbar-primary);
            transform: scaleX(0);
            transition: transform 0.2s ease-in-out;
        }
        &:hover {
            background: transparent;
        }
        &.is-active::after {
            transform: scaleX(1);
        }
    }
}

.#{$prefix}--pills {
    .#{$prefix}__item > a.is-active {
        background-color: var(--navbar-primary);
        color: var(--navbar-primary-fg);
    }
}

.#{$prefix}--dot-indicator {
    .#{$prefix}__item > a {
        position: relative;
        &.is-active::after {
            content: "";
            position: absolute;
            bottom: 4px;
            left: 50%;
            transform: translateX(-50%);
            width: 4px;
            height: 4px;
            border-radius: 50%;
            background-color: var(--navbar-primary);
        }
    }
}

// --- Behavior ---
// Add this class with JS when user scrolls
.#{$prefix}.is-scrolled {
    box-shadow: var(--navbar-shadow);
    // For transparent/glass navbars to get a solid background on scroll
    background-color: var(--navbar-bg);
}

// Transparent variant that becomes solid on scroll
.#{$prefix}--transparent {
    background-color: transparent;
    border-bottom-color: transparent;
    box-shadow: none;
}

.#{$prefix}--glass {
    background-color: rgba(255, 255, 255, 0.5);
    backdrop-filter: saturate(180%) blur(10px);
    border-bottom: 1px solid rgba(226, 232, 240, 0.5); // slate-200 with alpha

    &.#{$prefix}--dark {
        background-color: rgba(2, 8, 23, 0.6); // slate-950 with alpha
        border-bottom: 1px solid rgba(30, 41, 59, 0.6); // slate-800 with alpha
    }
}

.#{$prefix}--autohide {
    transition:
        transform 0.3s ease-in-out,
        var(--navbar-transition);
    &.is-hidden {
        transform: translateY(-100%);
    }
}

// Note: Right alignment is the default behavior.

// --- Links on the Left ---
.#{$prefix}--links-left {
    .#{$prefix}__menu {
        margin-right: auto;
    }
}

// --- Links in the Center ---
.#{$prefix}--links-center {
    .#{$prefix}__menu {
        flex-grow: 1;
    }

    .#{$prefix}__nav {
        // Since the parent .navbar__menu is a flex container, we can't just center
        // the nav list itself. We need to make the nav a flex container too
        // and center its items (the links).
        width: 100%;
        justify-content: center;
    }
}

// To use, add one of the following classes to the main `.navbar` element.
// Example: `<nav class="navbar navbar--b-squeeze">`

// Base styles for all spans to ensure smooth transitions
.#{$prefix}__burger {
    span {
        // Ensure transform-origin is centered by default for rotation
        transform-origin: center;
    }
}

//--- 1. Squeeze ---
// Lines transform into an X without vertical movement.
.#{$prefix}--b-squeeze {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: translateY(0) rotate(45deg);
        }
        &:nth-child(3) {
            transform: translateY(0) rotate(-45deg);
        }
    }
}

//--- 2. Arrow Left ---
// Forms a chevron/arrow pointing left.
.#{$prefix}--b-arrow-left {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        width: 0.8rem; // Make lines shorter for the arrow head
        &:nth-child(1) {
            transform: translateY(3.5px) rotate(45deg);
            transform-origin: left;
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateY(-3.5px) rotate(-45deg);
            transform-origin: left;
        }
    }
}

//--- 3. Spin Right ---
// The entire icon spins 180 degrees clockwise during transformation.
.#{$prefix}--b-spin-right {
    .#{$prefix}__burger {
        transition: transform 0.3s ease;
    }
    &.is-mobile-menu-open .#{$prefix}__burger {
        transform: rotate(180deg);
        span {
            &:nth-child(1) {
                transform: rotate(45deg);
            }
            &:nth-child(3) {
                transform: rotate(-45deg);
            }
        }
    }
}

//--- 4. Spin Left ---
// The entire icon spins 180 degrees counter-clockwise.
.#{$prefix}--b-spin-left {
    .#{$prefix}__burger {
        transition: transform 0.3s ease;
    }
    &.is-mobile-menu-open .#{$prefix}__burger {
        transform: rotate(-180deg);
        span {
            &:nth-child(1) {
                transform: rotate(45deg);
            }
            &:nth-child(3) {
                transform: rotate(-45deg);
            }
        }
    }
}

//--- 5. Plus to X ---
// Forms a plus sign, which then rotates to become an X.
.#{$prefix}--b-plus-x {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: translateY(0) rotate(90deg);
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateY(0) rotate(90deg);
        }
    }
    &.is-mobile-menu-open .#{$prefix}__burger {
        transform: rotate(45deg);
    }
}

//--- 6. Gate Right ---
// Lines pivot open from the right side like a gate.
.#{$prefix}--b-gate-right {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        transform-origin: right;
        &:nth-child(1) {
            transform: translateY(2px) rotate(-45deg);
            width: 1.4rem;
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateY(-2px) rotate(45deg);
            width: 1.4rem;
        }
    }
}

//--- 7. Slide Over ---
// Top bar slides right, bottom bar slides left before transforming.
.#{$prefix}--b-slide-over {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: translateX(5px) rotate(45deg);
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateX(-5px) rotate(-45deg);
        }
    }
}

//--- 8. Rebound ---
// A bouncy, elastic animation effect.
.#{$prefix}--b-rebound {
    .#{$prefix}__burger span {
        transition: all 0.4s cubic-bezier(0.68, -0.6, 0.265, 1.6);
    }
}

//--- 9. Double Slash ---
// Transforms into two diagonal parallel lines.
.#{$prefix}--b-double-slash {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: translateY(0) rotate(60deg);
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateY(0) rotate(60deg);
        }
    }
}

//--- 10. To Minus ---
// The three lines collapse into a single horizontal minus sign.
.#{$prefix}--b-to-minus {
    &.is-mobile-menu-open .#{$prefix}__burger span {
        &:nth-child(1) {
            transform: translateY(0);
        }
        &:nth-child(2) {
            opacity: 0;
        }
        &:nth-child(3) {
            transform: translateY(0);
        }
    }
}
